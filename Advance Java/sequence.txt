Today's topics
1. Many-many relationship between entities
(spring hibernate core java project--excellent for testing Service--DAO--POJO layers)
Layers -- Tester --Service--DAO--POJO
Then can integrate in web app.
eg : Course *<----->* Student
BI dir association.
Suggestions 
1. Choose Set i/f instead of List , to enhance performance.
2. Add convenience methods (helper methods)
3. Override correctly as per the contract(equal objs MUST produce SAME hashcode) equals n hashCode methods.
If possible use -- unique data members(eg : email , courseName...) in overriding the methods.
4. Never choose CascadeType.REMOVE 
since it will delete data unnecessarily.
5. You can make any side as the owning side (no specific rule)
The side in which join table(asso table/intermediate table) appears is the owning side.
mappedBy --must appear in the inverse side.
Value of mappedBy=name of the prop as it appears in the owning side.
@ManyToMany(cascade = {CascadeType.PERSIST,CascadeType.MERGE})
@JoinTable(name = "courses_studs",joinColumns = @JoinColumn(name="c_id"),inverseJoinColumns = @JoinColumn(name="stud_id"))
public Set<Student> getStudents() {
  return students;
}
eclipse project : day15.1
(database : test_dmc, tables -- courses,students,courses_studs)
-----------------------
2. get vs load
exam/interview objective
(in above project --In StudentDaoImpl class , replace get by load)

3. Session API
saveOrUpdate,merge
evict , clear


4. Spring AOP --exam objective --check
Aspect Oriented Programming.
eclipse project --test_aop_simple

5. Maven -- day15_maven

6. JNDI --Java naming and Directory i/f (Naming service)
eclipse project --test_jndi

7. P.L Validations, update , versioning
day15.2

8. Send Mail --ref : spring_demo

9. JSP custom tags -- 
custom_tags  --exam objective
readme
readymade eclipse project --


Readymade demos(eclipse projects)
1.file upload w/o spring boot 
spring_mvc_image_upload2

2.many to many
day15.1

3. spring aop
test_aop_simple

4. Hibernate session api
hibernate_session_api

5.Customizing tx attributes(tx propagation)
spring_jpa_txs_new2
(refer : transactions.txt)

6.maven
day15_maven

7. Spring Boot testing (Unit testing/integrational testing)
projects under spring-boot-test

8. i18n demo
spring_demo

9. design patterns
refer to its readme from design-patterns

10.Presentation logic  validations , @Version(optimistic locking), updatine details
day15.2

11. inheritance in hibernate

12. composite PK
spring_hib_composite_pk


13.JPQL
named query
criteria query 
hibernate stored proc
ref : spring_javase_hibernate

14.exam help








